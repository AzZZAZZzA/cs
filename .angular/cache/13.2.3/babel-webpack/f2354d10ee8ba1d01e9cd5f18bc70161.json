{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { tap, catchError, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../shared/message.service\";\nexport let CarOwnersService = /*#__PURE__*/(() => {\n  class CarOwnersService {\n    constructor(http, messageService) {\n      this.http = http;\n      this.messageService = messageService;\n      this.url = '/api/owners';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getOwners() {\n      return this.http.get(this.url);\n    }\n\n    getOwnerBiId(id) {\n      const url = `${this.url}/${id}`;\n      return this.http.get(url).pipe(tap(_ => this.log(`fetched owner id=${id}`)), catchError(this.handleError(`getOwnerById id=${id}`)));\n    }\n\n    createOwner(newOwner) {\n      return this.http.post(this.url, newOwner, this.httpOptions).pipe(tap(newOwner => console.log(`create ${newOwner.id}`)), catchError(this.handleError('addOwner')));\n    }\n\n    updateOwner(owner) {\n      return this.http.put(this.url, owner, this.httpOptions).pipe(tap(_ => console.log(`updated owner id=${owner.id}`)), catchError(this.handleError('updateOwner')));\n    }\n\n    deletOwner(id) {\n      const url = `${this.url}/${id}`;\n      console.log(url);\n      return this.http.delete(url, this.httpOptions).pipe(tap(_ => this.log(`deleted owner id=${id}`)), catchError(this.handleError('delete owner')));\n    }\n\n    handleError(operation = 'operation', result) {\n      return error => {\n        console.error(error); // log to console instead\n\n        console.log(`${operation} failed: ${error.message}`);\n        return of(result);\n      };\n    }\n\n    log(message) {\n      this.messageService.add(`Service: ${message}`);\n    }\n\n  }\n\n  CarOwnersService.ɵfac = function CarOwnersService_Factory(t) {\n    return new (t || CarOwnersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n  };\n\n  CarOwnersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarOwnersService,\n    factory: CarOwnersService.ɵfac,\n    providedIn: 'root'\n  });\n  return CarOwnersService;\n})();","map":null,"metadata":{},"sourceType":"module"}